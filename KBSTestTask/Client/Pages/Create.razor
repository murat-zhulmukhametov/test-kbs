@page "/create"


@using Microsoft.AspNetCore.SignalR.Client
@using KBSTestTask.Shared

@inject NavigationManager NavigationManager
@inject HubConnection hubConnection
@inject IJSRuntime js


<h3>Добавить город</h3>

<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="Name" class="control-label">Название</label>
                <input for="Name" class="form-control" @bind="@city.Name" />
            </div>
            <div class="form-group">
                <label for="CitizensCount" class="control-label">Численность</label>
                <input for="CitizensCount" class="form-control" @bind="@city.CitizensCount" />
            </div>
            <div class="form-group">
                <label for="FoundationDate" class="control-label">Дата основания</label>
                <input for="FoundationDate" class="form-control" @bind="@city.FoundationDate" @bind:format="dd/MM/yyyy" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@CreateCity" value="Сохранить" />
                <input type="button" class="btn" @onclick="@Cancel" value="Отмена" />
            </div>
        </div>
    </div>
</form>

@code {
    City city = new City();

    protected override async Task OnInitializedAsync()
    {
        if (hubConnection.State != HubConnectionState.Connected)
            await hubConnection.StartAsync();


        hubConnection.On("Error", (string message) =>
        {
            js.InvokeVoidAsync("alert", message);
            StateHasChanged();
        });
    }

    protected async Task CreateCity()
    {
        await hubConnection.SendAsync("Create", city);
        NavigationManager.NavigateTo("list");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("list");
    }
}
